
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.datasource.url=jdbc:h2:file:./database
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.datasource.driverClassName=org.h2.Driver
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
server.port=8080

spring.datasource.url=jdbc:postgresql://postgresql:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# confiurando autenticação simples com spring security

#spring.security.user.name=elias
#spring.security.user.password=vitor123
#spring.security.user.roles=USERS

# configurando autenticação com OAUTH2
spring.security.oauth2.client.registration.google.client-id=442883060341-3lgifnhg2v0jbqh2ilejrt4lutgl5jof.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.github.scope=user:email
#spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
#spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
#spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
#spring.security.oauth2.client.provider.github.user-name-attribute=id
